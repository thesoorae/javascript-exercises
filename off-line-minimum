 OffLine Minimum                                                                     *
*  Using the JavaScript language, have the function OffLineMinimum(strArr) take the    *
*  strArr parameter being passed which will be an array of integers ranging from       *
*  1...n and the letter "E" and return the correct subset based on the following       *
*  rules. The input will be in the following format: ["I","I","E","I",...,"E",...,"I"] *
*  where the I's stand for integers and the E means take out the smallest integer      *
*  currently in the whole set. When finished, your program should return that new set  *
*  with integers separated by commas. For example: if strArr is                        *
*  ["5","4","6","E","1","7","E","E","3","2"] then your program should return 4,1,5.    *                                                  *
*                                                                                      *


function OffLineMinimum(strArr) { 
var minimum=+strArr[0];
  var index=null;
  var newarr=[];
  function TakeNewArray(strArr){
  for(x=0;x<strArr.length;x++){
    if (+strArr[x]<minimum){
      minimum=+strArr[x];
      index=x;}
    else if(strArr[x]=="E"){
      newarr.push(minimum);
      strArr.splice(x,1);
      strArr.splice(index,1);
      minimum=+strArr[0];
      TakeNewArray(strArr)};}};
  TakeNewArray(strArr);
  return newarr; 
         
}
